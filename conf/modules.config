/*
========================================================================================
    Load module config for default modules parameters
========================================================================================
----------------------------------------------------------------------------------------
*/

// Export these environment variables.
// Home paths of module programs
env {
    BIODATAHUB_HOME           = "/opt/search_engine/biodatahub"
    THERMORAWFILEPARSER_HOME  = "/opt/search_engine/thermorawfileparser"    
    MSFRAGGER_HOME            = "/opt/search_engine/msfragger"
    MZEXTRACTOR_HOME          = "/opt/search_engine/mz_extractor"
    REFRAG_HOME               = "/opt/ptm-compass/refrag"
    PROTEIN_ASSIGNER_HOME     = "/opt/ptm-compass/shifts"
    SHIFTS_HOME               = "/opt/ptm-compass/shifts"
    SOLVER_HOME               = "/opt/ptm-compass/solver"
}

// Global default params, used in configs
params {

    // Output folders
    outdir                     = null
    paramdir                   = "${params.outdir}/params"
    logdir                     = "${params.outdir}/logs"
    tracedir                   = "${params.outdir}/pipeline_info"

    // Fixed parameters
    fixed_params_file          = "params/fixed_params.ini"

    // SOLVER options
    sitelist_file              = "params/sitelist.txt"
    groupmaker_file            = "params/groupmaker.txt"

}


/*
========================================================================================
    Config file per module options
========================================================================================
----------------------------------------------------------------------------------------
*/

process {

    //
    // Publish Directory
    //
    publishDir  = [
        path: { 
            if ( task.tag ) { "${params.outdir}/modules/${task.process.tokenize(':')[-2].toLowerCase()}/${task.tag}_${task.process.tokenize(':')[-1].toLowerCase()}" }
            else { "${params.outdir}/modules/${task.process.tokenize(':')[-2].toLowerCase()}/${task.process.tokenize(':')[-1].toLowerCase()}" }        
        },
        // path: { "${params.outdir}/modules/${task.tag}_${task.process.tokenize(':')[-1].toLowerCase()}" },
        mode: 'copy',
        //overwrite: true,
        saveAs: { filename ->
            if (filename.indexOf(".log") > 0) { "../../../logs/${filename}" }
            else if (filename.indexOf("_log.txt") > 0) { "../../../logs/${task.process.tokenize(':')[-1].toLowerCase()}#${filename.replace('_log.txt','')}.log" }
            else { filename }
        }
    ]
    
    //
    // Modules
    //
    withName: 'SEARCH_ENGINE_WORKFLOW:.*' {
        container =  "backends/search_engine.sif"
    }
    withName: '.*:REFRAG:.*' {
        container =  "backends/refrag.sif"
    }
    withName: '.*:SHIFTS:.*' {
        container =  "backends/shifts.sif"
    }
    withName: '.*:SOLVER:.*' {
        container =  "backends/solver.sif"
    }

}